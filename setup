#!/usr/bin/env bash

set -e

# === include functions ===
for f in libexec/*; do
	. "$f"
done

# === OS detection and OS specific preparations needed to proceed. === #
OS_NAME=''
LINUX_DISTRO=''
unset IS_WSL

detectOS

if [[ "$OS_NAME" = 'linux' ]]; then
	#sudo apt update
	echo "Linux distro is $LINUX_DISTRO"
fi

setup_nix() {
	checkBin nix || (
		log 'installing Nix'
		#sh <(curl -L https://nixos.org/nix/install) --no-daemon
		sh <(curl -L https://nixos.org/nix/install) --darwin-use-unencrypted-nix-store-volume --daemon
		. ~/.nix-profile/etc/profile.d/nix.sh
		log 'Nix is installed'
	)
	log 'installing packages with Nix'

	nix-env -f ./home.nix -ir

	log 'configure starship'
	symlink config/starship.toml ~/.config/starship.toml

}

setup_mac() {
	if [[ "$OS_NAME" != "macos" ]]; then
		return 0
	fi

	log 'setting up macOS specific stuff'

	### Homebrew
	eval "$(/opt/homebrew/bin/brew shellenv)" || true
	checkBin brew || (
		echo === installing homebrew ===
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
	)
	### Homebrew END

	### Karabiner
	brew list --cask karabiner-elements 2>/dev/null || (
		log 'installing karabiner-elements'
		brew install karabiner-elements
		symlink config/karabiner ~/.config/karabiner
	)
	### Karabiner END

	### OED dictionary
	curl -L https://raw.githubusercontent.com/ropensci/hunspell/master/inst/dict/en_GB.aff >~/Library/Spelling/en_GB-oed.aff
	curl -L https://raw.githubusercontent.com/ropensci/hunspell/master/inst/dict/en_GB.dic >~/Library/Spelling/en_GB-oed.dic
	### OED dictionary END

	### defaults
	log 'setting defaults for macOS'
	./mac-defaults.sh
	### defaults END
}

setup_mac_gui() {
	if [[ "$OS_NAME" != "macos" ]]; then
		return 0
	fi
	log 'setting up macOS GUI applications'
	brew update
	brew install keka
    brew install iterm2
}

setup_git() {
	symlink config/git ~/.config/git
	symlink homefiles/.gitconfig ~/.gitconfig
	if [[ ! -f ~/.gituser ]]; then
		log '~/.gituser file missing, creating one'
		read -p 'Email for git: ' git_email
		read -p 'Name for git: ' git_name
		cat <<EOF >~/.gituser
[user]
	email = $git_email
	name = $git_name
EOF
	fi
}

setup_fish() {
	symlink config/fish ~/.config/fish
	checkBin fish || (
		brew install fish
		log 'adding fish as a standard shell'
		#shell="/usr/local/bin/fish"
		shell="/opt/homebrew/bin/fish"
		file=/etc/shells
		grep -qF "$shell" "$file" || echo "$shell" | sudo tee -a "$file"
		log 'changing default shell'
		chsh -s "$shell"
	)
	log 'running fish custom setup script'
	bash config/fish/custom_ext.sh
}

setup_neovim() {
	symlink config/nvim ~/.config/nvim
}

setup_ideavim() {
	symlink homefiles/ideavimrc ~/.ideavimrc
}

setup_asdf() {
	[[ -d ~/.asdf ]] && return
	git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.0
	mkdir -p ~/.config/fish/completions
	cp ~/.asdf/completions/asdf.fish ~/.config/fish/completions
}

setup_nix
setup_mac
setup_fish
setup_git
setup_neovim
setup_ideavim
setup_asdf
setup_mac_gui
