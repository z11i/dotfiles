#!/usr/bin/env bash

set -e

# === include functions ===
for f in libexec/*; do
	. "$f"
done

# === OS detection and OS specific preparations needed to proceed. === #
OS_NAME=''
LINUX_DISTRO=''

detectOS

## macos preparations
if [[ $OS_NAME = 'macos' ]]; then
	checkBin brew ||
		(
			echo === installing homeberw ===
			curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh
		)
	[[ -e /usr/local/opt/gnu-getopt/bin/getopt ]] ||
		brew install gnu-getopt # solve getopt on macos doesn't support long options
	export FLAGS_GETOPT_CMD=/usr/local/opt/gnu-getopt/bin/getopt
fi

# === read flags === #
. shflags/shflags

YES="${FLAGS_TRUE}"
NO="${FLAGS_FALSE}"

DEFINE_boolean 'all' "$NO" 'configure all tools'
DEFINE_boolean 'git' "$NO" 'configure git'
DEFINE_boolean 'fish' "$NO" 'configure fish'
DEFINE_boolean 'nvim' "$NO" 'configure neovim'
DEFINE_boolean 'gnu' "$NO" 'configure gnu tools for mac'
DEFINE_boolean 'node' "$NO" 'configure node and yarn'
DEFINE_boolean 'alacritty' "$NO" 'configure alacritty'
DEFINE_boolean 'tmux' "$NO" 'configure tmux'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"

# === setup git === #
if [[ "${FLAGS_git}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	symlink config/git ~/.config/git
	symlink homefiles/.gitconfig ~/.gitconfig
	if [[ "$OS_NAME" = 'macos' ]]; then
		brew install git
	fi
	if [[ ! -f ~/.gituser ]]; then
		echo '=== ~/.gituser file missing, creating one ==='
		read -p 'Email for git: ' git_email
		read -p 'Name for git: ' git_name
		cat <<EOF >~/.gituser
[user]
	email = $git_email
	name = $git_name
EOF
	fi
	checkBin diff-so-fancy || (
		case "$OS_NAME" in
		linux)
			curl "https://raw.githubusercontent.com/so-fancy/diff-so-fancy/master/third_party/build_fatpack/diff-so-fancy" | sudo tee /usr/local/bin/diff-so-fancy >/dev/null
			sudo chmod +x /usr/local/bin/diff-so-fancy
			;;
		macos)
			brew install diff-so-fancy
			;;
		esac
	)
fi

# === setup fish === #
if [[ "${FLAGS_fish}" -eq "$YES" ]] || [ "${FLAGS_all}" -eq "$YES" ]; then
	symlink config/fish ~/.config/fish
	checkBin fish || (
		case "$OS_NAME" in
		linux)
			case "$LINUX_DISTRO" in
			ubuntu)
				echo === installing fish ===
				sudo apt-add-repository -y ppa:fish-shell/release-3
				sudo apt-get update -y
				sudo apt-get install -y fish
				echo === changing default shell ===
				chsh -s /usr/bin/fish
				;;
			esac
			;;
		macos)
			echo === installing fish ===
			brew install fish && (
				line='/usr/local/bin/fish'
				file=/etc/shells
				echo === adding fish as a standard shell ===
				grep -qF "$line" "$file" || echo "$line" | sudo tee --append "$file"
				echo === changing default shell ===
				chsh -s "$line"
			)
			;;
		esac
	)
	echo === running fish custom setup script
	bash config/fish/custom_ext.sh

	echo === installing shell tools ===
	checkBin thefuck || (
		echo === installing thefuck ===
		case "$OS_NAME" in
		linux)
			sudo apt install python3-dev python3-pip python3-setuptools
			sudo pip3 install thefuck
			;;
		macos)
			brew install thefuck
			;;
		esac
	)
	checkBin starship || (
		echo === installing starship ===
		case "$OS_NAME" in
		linux)
			curl -fsSL https://starship.rs/install.sh | bash
			;;
		macos)
			brew install starship
			;;
		esac
	)
	symlink config/starship.toml ~/.config/starship.toml
fi

# === setup gnu === #
if [[ "${FLAGS_gnu}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	if [[ "$OS_NAME" = 'macos' ]]; then
		echo === installing gnu utilities ===
		brew install coreutils findutils gnu-tar gnu-sed gawk gnutls gnu-indent gnu-getopt grep
	fi
fi

# === setup neovim === #
if [[ "${FLAGS_nvim}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	checkBin nvim || (
		echo === installing neovim ===
		case "$OS_NAME" in
		linux)
			sudo apt install -y neovim
			;;
		macos)
			brew install neovim
			;;
		esac
	)
	symlink config/nvim ~/.config/nvim
fi

# === setup node === #
if [[ "${FLAGS_node}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	checkBin node || (
		echo === installing node ===
		case "$OS_NAME" in
		linux)
			sudo apt update
			sudo apt install -y nodejs
			;;
		macos)
			brew install node
			;;
		esac
	)
	checkBin yarn || (
		echo === installing yarn ===
		sudo apt install -y yarnpkg
	)
fi

# === setup alacritty === #
if [[ "${FLAGS_alacritty}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	if [[ "$LINUX_DISTRO" = wsl ]]; then
		:
	else
		checkBin alacritty || (
			echo === installing alacritty ===
			case "$OS_NAME" in
			linux)
				sudo add-apt-repository ppa:mmstick76/alacritty
				sudo apt install alacritty
				;;
			macos)
				brew cask install alacritty
				;;
			esac
		)
		symlink config/alacritty ~/.config/alacritty
	fi
fi

# === setup tmux === #
if [[ "${FLAGS_tmux}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	checkBin tmux || (
		echo === installing tmux ===
		case "$OS_NAME" in
		linux)
			sudo apt update
			sudo apt install tmux
			;;
		macos)
			brew install tmux
			;;
		esac
	)
	symlink config/tmux/tmux.conf ~/.tmux.conf
fi
