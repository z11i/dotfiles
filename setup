#!/usr/bin/env bash

set -e

# === include functions ===
for f in libexec/*; do
	. "$f"
done

# === OS detection and OS specific preparations needed to proceed. === #
OS_NAME=''
LINUX_DISTRO=''
unset IS_WSL

detectOS

if [[ "$OS_NAME" = 'linux' ]]; then
	log "Linux distro is $LINUX_DISTRO"
	checkBin apt && sudo apt update
	checkBin curl || (
		checkBin apt && sudo apt install curl
	)
	checkBin xz || (
		checkBin apt && sudo apt install xz-utils
	)
	checkBin gcc || (
		checkBin apt && sudo apt install build-essential
	)
fi

setup_profile() {
	symlink homefiles/.profile ~/.profile
}

setup_nix() {
	checkBin nix || (
		log 'installing Nix'
		case "$OS_NAME" in
		linux)
			sh <(curl -L https://nixos.org/nix/install)
			;;
		macos)
			sh <(curl -L https://nixos.org/nix/install) --darwin-use-unencrypted-nix-store-volume --daemon
			;;
		esac
		log 'Nix is installed'
	)
	if [[ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]]; then
		. '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
	fi
	log 'installing packages with Nix'

	nix-env -f ./home.nix -ir

	log 'configure starship'
	symlink config/starship.toml ~/.config/starship.toml
}

setup_mac() {
	if [[ "$OS_NAME" != "macos" ]]; then
		return 0
	fi

	log 'setting up macOS specific stuff'

	### Homebrew
	checkBin brew || (
		echo '=== installing homebrew ==='
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
		eval "$(/opt/homebrew/bin/brew shellenv)" || eval "$(/usr/local/bin/brew shellenv)"
		echo '=== configuring homebrew access so it is not just for one user ==='
		log 'creating a usergroup brew'
		sudo dseditgroup -o create brew
		log 'adding the current user to group brew'
		sudo dseditgroup -o edit -a "$(whoami)" -t user brew
		log 'changing owner of brew directory to brew'
		sudo chgrp -R brew "$(brew --prefix)"
		log 'changing permissions of brew directory'
		sudo chmod -R g+rwX "$(brew --prefix)"
	)
	### Homebrew END

	### Karabiner
	brew list --cask karabiner-elements 2>/dev/null || (
		log 'installing karabiner-elements'
		brew install karabiner-elements
		symlink config/karabiner ~/.config/karabiner
	)
	### Karabiner END

	### OED dictionary
	curl -L https://raw.githubusercontent.com/ropensci/hunspell/master/inst/dict/en_GB.aff >~/Library/Spelling/en_GB-oed.aff
	curl -L https://raw.githubusercontent.com/ropensci/hunspell/master/inst/dict/en_GB.dic >~/Library/Spelling/en_GB-oed.dic
	### OED dictionary END

	### defaults
	log 'setting defaults for macOS'
	./mac-defaults.sh
	### defaults END

	### setup tmux-256color {{{ https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95
	curl -LO https://invisible-island.net/datafiles/current/terminfo.src.gz && gunzip terminfo.src.gz
	sudo /usr/bin/tic -xe tmux-256color terminfo.src
	rm terminfo.src
	### setup tmux-256color }}}
}

setup_mac_gui() {
	if [[ "$OS_NAME" != "macos" ]]; then
		return 0
	fi
	log 'setting up macOS GUI applications'
	brew update
	brew install amethyst
	brew install appcleaner
	brew install firefox
	brew install google-drive
	brew install iina
	brew install keka
	brew install mos
	brew install raycast
	brew install spotify
	brew install wezterm
}

setup_git() {
	symlink config/git ~/.config/git
	symlink homefiles/.gitconfig ~/.gitconfig
	if [[ ! -f ~/.gitlocal ]]; then
		log "$HOME/.gitlocal file missing, creating one"
		read -rp 'Email for git: ' git_email
		read -rp 'Name for git: ' git_name
		cat <<EOF >~/.gitlocal
[user]
	email = $git_email
	name = $git_name
EOF
	fi
}

setup_fish() {
	symlink config/fish ~/.config/fish
	checkBin fish || (
		if [[ "$OS_NAME" = 'linux' ]]; then
			case "$LINUX_DISTRO" in
			ubuntu*)
				sudo apt-add-repository ppa:fish-shell/release-3
				sudo apt-get update
				sudo apt-get install fish
				;;
			debian*)
				echo 'deb http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_11/ /' | sudo tee /etc/apt/sources.list.d/shells:fish:release:3.list
				curl -fsSL https://download.opensuse.org/repositories/shells:fish:release:3/Debian_11/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_fish_release_3.gpg >/dev/null
				sudo apt install fish
				;;
			esac
		fi
		if [[ "$OS_NAME" = 'macos' ]]; then
			brew install fish
		fi
		log 'adding fish as a standard shell'
		shell=$(which fish)
		file=/etc/shells
		grep -qF "$shell" "$file" || echo "$shell" | sudo tee -a "$file"
		log 'changing default shell'
		chsh -s "$shell"
	)
	log 'running fish custom setup script'
	bash config/fish/custom_ext.sh
}

setup_neovim() {
	symlink config/nvim ~/.config/nvim
}

setup_ideavim() {
	symlink homefiles/ideavimrc ~/.ideavimrc
}

setup_asdf() {
	[[ -d ~/.asdf ]] && return
	git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
	mkdir -p ~/.config/fish/completions
	cp ~/.asdf/completions/asdf.fish ~/.config/fish/completions
}

setup_golang() {
	[[ -d ~/.asdf ]] && (
		asdf plugin-add golang || true
		asdf install golang "$(asdf list-all golang | fzf)"
		asdf global golang "$(asdf list golang | awk '{print $1; exit}')"
		GO111MODULE=on go install mvdan.cc/gofumpt@latest
	)
}

setup_node() {
	[[ -d ~/.asdf ]] && (
		asdf plugin-add nodejs || true
		asdf install nodejs "$(asdf list-all nodejs | fzf)"
		asdf global nodejs "$(asdf list nodejs | awk '{print $1; exit}')"
	)
}

setup_tmux() {
	checkBin tmux && (
		symlink config/tmux/tmux.conf ~/.tmux.conf
		[[ -e ~/.tmux/plugins/tpm ]] || git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
	)
}

setup_rust() {
	curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
}

setup_wezterm() {
	symlink config/wezterm ~/.config/wezterm
	symlink libexec/switch-theme /usr/local/bin/switch-theme
}

setup_profile
setup_nix
setup_mac
setup_fish
setup_git
setup_neovim
setup_ideavim
setup_asdf
setup_mac_gui
setup_golang
setup_node
setup_rust
setup_wezterm
