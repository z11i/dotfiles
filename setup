#!/usr/bin/env bash

set -e

# === include functions ===
for f in libexec/*; do
	. "$f"
done

# === OS detection and OS specific preparations needed to proceed. === #
OS_NAME=''
LINUX_DISTRO=''
unset IS_WSL

detectOS

if [[ "$OS_NAME" = 'linux' ]]; then
	#sudo apt update
	echo "Linux distro is $LINUX_DISTRO"
fi

setup_nix() {
	checkBin nix || (
		log 'installing Nix'
		sh <(curl -L https://nixos.org/nix/install) --daemon
		log 'Nix is installed'
	)
	log 'installing packages with Nix'
	nix-env -iA nixpkgs.zoxide
	nix-env -iA nixpkgs.gitAndTools.delta
	nix-env -iA nixpkgs.ripgrep
	nix-env -iA nixpkgs.starship
	symlink config/starship.toml ~/.config/starship.toml
	nix-env -iA nixpkgs.fzf
}

setup_mac() {
	if [[ "$OS_NAME" != "macos" ]]; then
		return 0
	fi

	log 'setting up macOS specific stuff'

	### Homebrew
	checkBin brew || (
		echo === installing homebrew ===
		curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh
	)
	### Homebrew END

	### Karabiner
	brew list --cask karabiner-elements 2>/dev/null || (
		log 'installing karabiner-elements'
		brew install karabiner-elements
		symlink config/karabiner ~/.config/karabiner
	)
	### Karabiner END

	### OED dictionary
	curl -L https://raw.githubusercontent.com/ropensci/hunspell/master/inst/dict/en_GB.aff >~/Library/Spelling/en_GB-oed.aff
	curl -L https://raw.githubusercontent.com/ropensci/hunspell/master/inst/dict/en_GB.dic >~/Library/Spelling/en_GB-oed.dic
	### OED dictionary END

	### coreutils
	nix-env -iA nixpkgs.coreutils
	### coreutils END
}

setup_git() {
	symlink config/git ~/.config/git
	symlink homefiles/.gitconfig ~/.gitconfig
	nix-env -iA nixpkgs.gitAndTools.gitFull
	if [[ ! -f ~/.gituser ]]; then
		log '~/.gituser file missing, creating one'
		read -p 'Email for git: ' git_email
		read -p 'Name for git: ' git_name
		cat <<EOF >~/.gituser
[user]
	email = $git_email
	name = $git_name
EOF
	fi
}

setup_fish() {
	symlink config/fish ~/.config/fish
	checkBin fish || (
		nix-env -iA nixpkgs.fish
		log 'adding fish as a standard shell'
		shell='~/.nix-profile/bin/fish'
		file=/etc/shells
		grep -qF "$shell" "$file" || echo "$shell" | sudo tee -a "$file"
		log 'changing default shell'
		chsh -s "$line"
	)
	log 'running fish custom setup script'
	bash config/fish/custom_ext.sh
}

setup_neovim() {
	nix-env -iA nixpkgs.neovim
	symlink config/nvim ~/.config/nvim
}

setup_alacritty() {
	if [[ "$IS_WSL" ]]; then
		echo 'skipping alacritty for WSL'
	else
		nix-env -iA nixpkgs.alacritty
		symlink config/alacritty ~/.config/alacritty
	fi
}

setup_tmux() {
	nix-env -iA nixpkgs.tmux
	symlink config/tmux/tmux.conf ~/.tmux.conf
}

setup_nix
setup_mac
setup_fish
setup_git
setup_neovim
setup_alacritty
setup_tmux
