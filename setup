#!/usr/bin/env bash

set -e

# === OS detection and OS specific preparations needed to proceed. === #
OS_NAME=''
LINUX_DISTRO=''
detectOS() {
	case $(uname | tr '[:upper:]' '[:lower:]') in
	linux*)
		OS_NAME=linux
		distro=$(
			(lsb_release -ds || cat /etc/*release || uname -om) 2>/dev/null |
				head -n1 |
				tr '[:upper:]' '[:lower:]'
		)
		case $distro in
		ubuntu*)
			LINUX_DISTRO=ubuntu
			;;
		*)
			echo 'Distro not supported yet!'
			exit 127
			;;
		esac
		;;
	darwin*)
		OS_NAME=macos
		;;
	#msys*)
	#	OS_NAME=windows
	#	;;
	*)
		echo 'OS not supported yet!'
		exit 127
		;;
	esac
}

detectOS

## macos preparations
if [[ $OS_NAME = 'macos' ]]; then
	command -v brew >/dev/null 2>&1 ||
		(
			echo === installing homeberw ===
			curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh
		)
	[[ -e /usr/local/opt/gnu-getopt/bin/getopt ]] ||
		brew install gnu-getopt # solve getopt on macos doesn't support long options
	export FLAGS_GETOPT_CMD=/usr/local/opt/gnu-getopt/bin/getopt
fi

# === functions === #
_bkup() {
	if [ ! -e "$1" ]; then
		return
	fi
	echo "backup up <<< $1"
	prefix="$1".bkup
	counter=1
	while true; do
		target="$prefix"_"$counter"
		if [ ! -e "$target" ]; then
			echo "backup to >>> $target"
			mv -- "$1" "$target"
			break
		fi
		counter=$((counter + 1))
	done
}

# usage: transfer <filename> <dir>
# example: transfer homefiles/.gitignore_global ~
# example: transfer config/fish ~/.config
transfer() {
	echo === transfering "$1" ===
	dest="$2/$(basename "$1")"
	_bkup "$dest"
	echo transfer to "$dest"
	if [[ -f "$1" ]]; then
		cp "$1" "$dest"
	elif [[ -d "$1" ]]; then
		cp -r "$1" "$dest"
	fi
}

# usage: symlink to from
symlink() {
	echo === symlink from "$2" to "$1" ===
	_bkup "$2"
	ln -s $(pwd)/"$1" "$2"
}

# === read flags === #
. shflags/shflags

DEFINE_boolean 'all' ${FLAGS_FALSE} 'configure all tools'
DEFINE_boolean 'git' ${FLAGS_FALSE} 'configure git'
DEFINE_boolean 'fish' ${FLAGS_FALSE} 'configure fish'
DEFINE_boolean 'gnu' ${FLAGS_FALSE} 'configure gnu tools for mac'

FLAGS "$@" || exit $?
eval set -- "${FLAGS_ARGV}"
YES="${FLAGS_TRUE}"
NO="${FLAGS_FALSE}"

# === setup git === #
if [[ "${FLAGS_git}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	symlink homefiles/.gitignore_global ~/.gitignore_global
	symlink homefiles/.gitconfig ~/.gitconfig
	if [[ "$OS_NAME" = 'macos' ]]; then
		brew install git
	fi
	symlink homefiles/gitalias.git/gitalias.txt ~/.gitalias.txt
	if [[ ! -f ~/.gituser ]]; then
		echo '=== ~/.gituser file missing, creating one ==='
		read -p 'Email for git: ' git_email
		read -p 'Name for git: ' git_name
		cat <<EOF >~/.gituser
[user]
	email = $git_email
	name = $git_name
EOF
	fi
	command -v diff-so-fancy || (
		case "$OS_NAME" in
		linux)
			apt-get install diff-so-fancy
			;;
		macos)
			brew install diff-so-fancy
			;;
		esac
	)
fi

# === setup fish === #
if [[ "${FLAGS_fish}" -eq "$YES" ]] || [ "${FLAGS_all}" -eq "$YES" ]; then
	mkdir -p ~/.config
	symlink config/fish ~/.config/fish
	command -v fish || (
		case "$OS_NAME" in
		linux)
			case "$LINUX_DISTRO" in
			ubuntu)
				echo === installing fish ===
				sudo apt-add-repository -y ppa:fish-shell/release-3
				sudo apt-get update -y
				sudo apt-get install -y fish
				echo === changing default shell ===
				chsh -s /usr/bin/fish
				;;
			esac
			;;
		macos)
			echo === installing fish ===
			brew install fish && (
				line='/usr/local/bin/fish'
				file=/etc/shells
				echo === adding fish as a standard shell ===
				grep -qF "$line" "$file" || echo "$line" | sudo tee --append "$file"
				echo === changing default shell ===
				chsh -s "$line"
			)
			;;
		esac
	)
	echo === running fish custom setup script
	bash config/fish/custom_ext.sh

	echo === installing shell tools ===
	command -v thefuck || (
		echo === installing thefuck ===
		case "$OS_NAME" in
		linux)
			sudo apt install python3-dev python3-pip python3-setuptools
			sudo pip3 install thefuck
			;;
		macos)
			brew install thefuck
			;;
		esac
	)
	command -v starship || (
		echo === installing starship ===
		case "$OS_NAME" in
		linux)
			sudo apt install python3-dev python3-pip python3-setuptools
			sudo pip3 install thefuck
			;;
		macos)
			brew install starship
			;;
		esac
	)
fi

# === setup gnu === #
if [[ "${FLAGS_gnu}" -eq "$YES" ]] || [[ "${FLAGS_all}" -eq "$YES" ]]; then
	if [[ "$OS_NAME" = 'macos' ]]; then
		echo === installing gnu utilities ===
		brew install coreutils findutils gnu-tar gnu-sed gawk gnutls gnu-indent gnu-getopt grep
	fi
fi
