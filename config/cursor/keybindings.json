// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+d",
    "command": "-deleteRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && !inDebugMode && !terminalFocus"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "ctrl+cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+l",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "shift+k",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && inputFocus && !inReferenceSearchEditor && !isInEmbeddedEditor && vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "-extension.vim_ctrl+k",
    "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
  },
  {
    "key": "cmd+enter",
    "command": "-lineBreakInsert",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+cmd+f12",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "tab",
    "command": "-vscode-neovim.send",
    "when": "neovim.init && neovim.recording || editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "tab",
    "command": "-vscode-neovim.send-cmdline",
    "when": "neovim.init && neovim.mode == 'cmdline'"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "key": "f9",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.selectTheme"
  },
  {
    "key": "ctrl+cmd+l",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+;",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+\\ j",
    "command": "editor.action.inlineDiffs.nextChange",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "ctrl+\\ k",
    "command": "editor.action.inlineDiffs.previousChange",
    "when": "editorTextFocus && (arbitrary function)"
  },
  {
    "key": "cmd+i",
    "command": "composerMode.agent"
  },
  {
    "key": "shift+cmd+y",
    "command": "-editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "alt+q",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+enter",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "cmd+y",
    "command": "-editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorTextFocus && @inlineDiffs.acceptPartialEdit.isActiveEditorWithDiffs"
  },
  {
    "key": "cmd+y",
    "command": "-editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorTextFocus && @inlineDiffs.acceptPartialEdit.isActiveEditorWithDiffs"
  },
  {
    "key": "ctrl+.",
    "command": "editor.action.inlineDiffs.nextChange",
    "when": "editorTextFocus && @inlineDiffs.nextChange.isActiveEditorWithDiffs"
  },
  {
    "key": "alt+j",
    "command": "-editor.action.inlineDiffs.nextChange",
    "when": "editorTextFocus && @inlineDiffs.nextChange.isActiveEditorWithDiffs"
  },
  {
    "key": "ctrl+,",
    "command": "editor.action.inlineDiffs.previousChange",
    "when": "editorTextFocus && @inlineDiffs.previousChange.isActiveEditorWithDiffs"
  },
  {
    "key": "alt+k",
    "command": "-editor.action.inlineDiffs.previousChange",
    "when": "editorTextFocus && @inlineDiffs.previousChange.isActiveEditorWithDiffs"
  },
  {
    "key": "shift+enter",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\\\r\n"
    },
    "when": "terminalFocus"
  },
  {
    "key": "cmd+e",
    "command": "composerMode.background"
  }
]
